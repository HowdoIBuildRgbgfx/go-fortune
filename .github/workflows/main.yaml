name: DipSA CICD Workshop

#trigger
on:
 push:
  branches:
  - 'v[0-9]+.[0-9]+'
  #Step-1: Pipeline trigger
  -
env:
  BRANCH: ${{ github.ref_name }}"

jobs:
  begin-workflow:
    if: ${{ !startsWith( format('{0}', github.event.head_commit.message), '#NORUN' ) }}
    #Step-5: Conditional for #RUN
    runs-on: ubuntu-latest

    steps:
    - name: Install Node and NPM
      run: sudo apt install nodejs

    - name: Check for Successful Node Installation
      run: node -v

    - name: Install Railway
      run: npm i -g @railway/cli

    - name: Echo the branch name
      run: echo "current branch - ${{ github.ref_name }}"

    - name: Checkout the Current Repo
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref_name }}

    - name: Deploy
      run: railway up
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Get Deployment URL
      id: deployment0
      uses: dorshinar/get-deployment-url@master
      timeout-minutes: 1
      with:
        token: ${{ secrets.GH_TOKEN }}

    - name: Get Deployment URL
      id: deployment1
      uses: dorshinar/get-deployment-url@v1.0.7
      timeout-minutes: 1
      with:
        token: ${{ secrets.GH_TOKEN }}

    #test dorshinar after deploying
    - name: Send custom JSON data to Slack workflow
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        #Step-4: Posting a rich message using Block Kit
        payload: |
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "DipSA55 CI/CD Assignment Submission"
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Name:*\nJason Tay Neng Wei"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Matriculation:*\nA0265092A"
                  }
                ]
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Email:*\nJason.Tay.NW@gmail.com"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Repository:*\nhttps://github.com/${{ github.repository }}"
                  }
                ]
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Deployment:*\nhttps://www.google.com/"
                  }
                ]
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "<https://www.google.com/|Open Application>"
                  }
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_TEST }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK








#wonder what mrkdwn means- markdown?

    # - name: Send custom JSON data to Slack workflow
    #   id: slack
    #   uses: slackapi/slack-github-action@v1.23.0
    #   with:
    #     # For posting a rich message using Block Kit
    #     payload: |
    #       {
    #         "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }} || toJSON(github.event.head_commit.message)",
    #         "blocks": [
    #           {
    #             "type": "section",
    #             "text": {
    #               "type": "mrkdwn",
    #               "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
    #             }
    #           }
    #         ]
    #       }
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_TEST }}
    #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK



    # - name: deploy to vercel
    #   uses: amondnet/vercel-action@v25.1.0
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     github-token: ${{ secrets.GH_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID }}
    #     vercel-project-id: ${{ secrets.PROJ_ID }}
    #     vercel-args: '--prod'